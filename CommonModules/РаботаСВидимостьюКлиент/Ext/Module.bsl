// Предназначена для обработки изменения пользователем значения элемента формы, которое может влиять
// на видимость других элементов.
// Если будут обнаружены скрываемые элементы, содержащие заполненные значения, то пользователю
// будет задан вопрос об очистке реквизитов. Пользователь может отказаться от изменений. В этом
// случае в изменяемом реквизите будет восстановлено его последнее значение.
//
// Параметры:
// ПараметрыВидимости - массив каждый элемент которого является структурой вида:
// 		Имя - имя элемента формы. Тип: Строка
//		Видимость - видимость элемента которая будет установлена если ПараметрыВидимости будут применены. 
//			Тип: Булево
// Элемент - элемент формы изменяемый пользователем.
//		Тип: ПолеФормы
// ПоследнееЗначение - значение изменяемого пользователем элемента до начала изменения.
// Форма - ссылка на форму из которой вызывается эта процедура.
//		Тип: ФормаКлиентскогоПриложения
// ПроцедураВыполняемаяПослеПримененияВидимости - имя процедуры модуля формы которая будет вызвана
// 		после применения ПараметровВидимости.
//		Тип: Строка
// ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости - имя процедуры модуля формы которая будет
// 		вызвана после отказа пользователя от изменения элемента.
//		Тип: Строка
Процедура ОбработатьИзменениеЭлемента(ПараметрыВидимости, Элемент, ПоследнееЗначение, Форма
	, ПроцедураВыполняемаяПослеПримененияВидимости = Неопределено
	, ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости = Неопределено) Экспорт

	ОчищаемыеРеквизиты = ПолучениеОчищаемыхРеквизитов(ПараметрыВидимости, Форма.Элементы, Форма.Объект);
	Если ЗначениеЗаполнено(ОчищаемыеРеквизиты) Тогда
		ТекстВопроса = ПолучениеТекстаВопросаОбОчисткеРеквизитов(ОчищаемыеРеквизиты, Элемент, Форма.Элементы, Форма.Объект);
		ДополнительныеПараметры = ПараметрыДляВопросаОбОчисткеРеквизитов();
		ДополнительныеПараметры.ПараметрыВидимости = ПараметрыВидимости;
		ДополнительныеПараметры.ОчищаемыеРеквизиты = ОчищаемыеРеквизиты;
		ДополнительныеПараметры.Элемент = Элемент;
		ДополнительныеПараметры.ПоследнееЗначение = ПоследнееЗначение;
		ДополнительныеПараметры.Форма = Форма;
		ДополнительныеПараметры.ПроцедураВыполняемаяПослеПримененияВидимости = ПроцедураВыполняемаяПослеПримененияВидимости;
		ДополнительныеПараметры.ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости 
			= ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости;
		Оповещение = Новый ОписаниеОповещения
			("ПослеОтветаНаВопросОбОчисткеРеквизитов", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,"Внимание!");
	Иначе
		ПрименитьПараметрыВидимости(ПараметрыВидимости, Форма, ПроцедураВыполняемаяПослеПримененияВидимости);
	КонецЕсли;

КонецПроцедуры

Функция ПараметрыДляВопросаОбОчисткеРеквизитов()

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыВидимости"); 
	ДополнительныеПараметры.Вставить("ОчищаемыеРеквизиты"); 
	ДополнительныеПараметры.Вставить("Элемент"); 
	ДополнительныеПараметры.Вставить("ПоследнееЗначение"); 
	ДополнительныеПараметры.Вставить("Форма"); 
	ДополнительныеПараметры.Вставить("ПроцедураВыполняемаяПослеПримененияВидимости");
	ДополнительныеПараметры.Вставить("ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости");
	Возврат ДополнительныеПараметры;

КонецФункции

Процедура ПослеОтветаНаВопросОбОчисткеРеквизитов(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ОчиститьРеквизиты(ДополнительныеПараметры.ОчищаемыеРеквизиты, ДополнительныеПараметры.Форма.Объект);
		ПрименитьПараметрыВидимости(ДополнительныеПараметры.ПараметрыВидимости, ДополнительныеПараметры.Форма
			, ДополнительныеПараметры.ПроцедураВыполняемаяПослеПримененияВидимости);
	Иначе
		ДополнительныеПараметры.Форма.Объект[ДополнительныеПараметры.Элемент.Имя] 
			= ДополнительныеПараметры.ПоследнееЗначение;
		Если ЗначениеЗаполнено(ДополнительныеПараметры.ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости) Тогда
			Оповещение = Новый ОписаниеОповещения
				(ДополнительныеПараметры.ПроцедураВыполняемаяПослеОтказаОтПримененияВидимости, ДополнительныеПараметры.Форма);
			ВыполнитьОбработкуОповещения(Оповещение);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Применяет полученные параметры видимости.
//
// Параметры:
// ПараметрыВидимости - массив каждый элемент которого является структурой вида:
// 		Имя - имя элемента формы. Тип: Строка
//		Видимость - видимость элемента которая будет установлена если ПараметрыВидимости будут применены. 
//			Тип: Булево
// Форма - ссылка на форму из которой вызывается эта процедура.
//		Тип: ФормаКлиентскогоПриложения
// ПроцедураВыполняемаяПослеПримененияВидимости - имя процедуры модуля формы которая будет вызвана
// 		после применения ПараметровВидимости.
//		Тип: Строка
Процедура ПрименитьПараметрыВидимости(ПараметрыВидимости, Форма
	, ПроцедураВыполняемаяПослеПримененияВидимости = Неопределено) Экспорт

	Для каждого ПараметрВидимости Из ПараметрыВидимости Цикл
		ТекущийЭлемент = Форма.Элементы.Найти(ПараметрВидимости.Имя);
		ТекущийЭлемент.Видимость = ПараметрВидимости.Видимость;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПроцедураВыполняемаяПослеПримененияВидимости) Тогда
		Оповещение = Новый ОписаниеОповещения(ПроцедураВыполняемаяПослеПримененияВидимости, Форма);
		ВыполнитьОбработкуОповещения(Оповещение);
	КонецЕсли;

КонецПроцедуры

// Конструктор для структуры "Параметр видимости".
//
// Параметры:
// Имя - имя элемента формы для которого требуется установить видимость. 
//		Тип: Строка
// Видимость - видимость элемента которую требуется установить. 
//		Тип: Булево
Функция СозданиеПараметраВидимости(Имя, Видимость = Истина) Экспорт

	ПараметрВидимости = Новый Структура("Имя, Видимость", Имя, Видимость);
	Возврат ПараметрВидимости;

КонецФункции

Функция ПолучениеОчищаемыхРеквизитов(ПараметрыВидимости, Элементы, Объект)

	ОчищаемыеРеквизиты = Новый Массив;
	Для каждого ПараметрВидимости Из ПараметрыВидимости Цикл
		ТекущийЭлемент = Элементы.Найти(ПараметрВидимости.Имя);
		Если ТекущийЭлемент.Видимость И НЕ ПараметрВидимости.Видимость
			И ЗначениеЗаполнено(Объект[ПараметрВидимости.Имя]) Тогда
		
			ОчищаемыеРеквизиты.Добавить(ПараметрВидимости.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОчищаемыеРеквизиты;

КонецФункции

Функция ПолучениеТекстаВопросаОбОчисткеРеквизитов(ОчищаемыеРеквизиты, Элемент, Элементы, Объект)

	ТекстВопроса = СтрШаблон("При изменении реквизита ""%1"" на ""%2"" будут очищены следующие данные:"
		, Элемент.Заголовок, Объект[Элемент.Имя]) + Символы.ПС;
	Для каждого Реквизит Из ОчищаемыеРеквизиты Цикл
		ТекущийЭлемент = Элементы.Найти(Реквизит);
		ТекстВопроса = ТекстВопроса + "- " + ТекущийЭлемент.Заголовок + Символы.ПС;
	КонецЦикла;
	ТекстВопроса = ТекстВопроса + "Продолжить?";
	
	Возврат ТекстВопроса;

КонецФункции

Процедура ОчиститьРеквизиты(ОчищаемыеРеквизиты, Объект)

	Для каждого Реквизит Из ОчищаемыеРеквизиты Цикл
		Объект[Реквизит] = Неопределено;
	КонецЦикла;

КонецПроцедуры
